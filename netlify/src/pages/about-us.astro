---
import CallToAction from '../components/CallToAction.astro';
import PrimaryLayout from '../layouts/PrimaryLayout.astro';

const baseUrl = import.meta.env.STRAPI_URL;
const token = import.meta.env.STRAPI_TOKEN;

const response = await fetch(`${baseUrl}/api/pages?populate[About][populate]=*`, {
  headers: {
    'Authorization': `Bearer ${token}`
  }
});


const { data } = await response.json();
const aboutData = data[0].About.find((component: { __component: string }) => component.__component === "about-main.about-main");
const seoData = data[0].About.find((component: { __component: string }) => component.__component === "about-seo.about-seo");
---

<PrimaryLayout title={seoData?.SeoTitle} description={seoData?.SeoDesc}>
    <main class="">
        <div>
            <CallToAction />
            <div class="max-w-[1860px] mx-auto xl:px-8 px-4 max-md:mt-7 lg:w-3/4 sm:w-full flex flex-col justify-center items-center">
                <h1 class="text-5xl font-bold text-center mb-8 md:pb-7 max-sm:text-3xl lg:my-2 lg:mt-5">{aboutData.Title}</h1>
                <div class="space-y-6 text-[#000000] text-sm sm:text-base">
                    {aboutData.description.map((paragraph: any) => (
                        <p>
                            {paragraph.children.map((child: any) => {
                                if(child.type === 'link'){
                                    const href = child.url.trim();
                                    const isExternal = href.startsWith('http');
                                    return (
                                        <a 
                                            class="text-[#ED2278]" 
                                            href={href} 
                                            {...(isExternal ? { target: "_blank", rel: "noopener noreferrer" } : {})}
                                        >
                                            {child.children ? child.children.map((sub: any) => (<span>{sub.text}</span>)) : child.text}
                                        </a>
                                    );
                                }
                                return child.bold ? <strong>{child.text}</strong> : <span>{child.text}</span>;
                            })}
                        </p>
                    ))}
                </div>
                 <button onclick="window.location.href='/meet-our-team'" class="meet-our-team-btn my-14 sm:my-8 sm:px-40 sm:py-10 hover:opacity-80">{aboutData.CTA}</button>
                <img src={`${baseUrl}${aboutData.img.url}`} alt={aboutData.img.alternativeText || "About Us Banner"} loading="lazy" class="w-[80%] mb-12 mt-4 max-sm:-mt-5 sm:w-full">
        </div>
    </main>
</PrimaryLayout>

<style>
    .meet-our-team-btn {
        display: flex;
        
        flex-direction: row;
        justify-content: center;
        align-items: center;
        padding: 15px 50px;
        font-size: 16px;
        font-weight: bold;
        width: 240px;
        height: 54px;
        background: #ED2278;
        border-radius: 11000px 6000px 6000px 0px;
        color: white;
        @media (max-width: 640px) {
            padding: 10px 30px;
            width: 200px;
            height: 40px;
            font-size: 14px;
        }
    }
    .text-primary {
        color: #ED2278;
    }
</style>